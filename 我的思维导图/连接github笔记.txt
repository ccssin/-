今晚连接github心得笔记
1下载git
2在git bash中获取到ssh
3将记事本中的ssh添加到github中的setting中
4新建一个记事本，随便名字，随便内容，只为测试
5在某个地方设置一个git的库（这是传文件到GitHub必须的一步，也是第一步）
6   git init 创建版本库
在想要的地方创建一个文件夹，打开文件夹后，右击鼠标git bash here，然后再命令行窗口输入git init，即可在当前文件夹创建一个版本库。如下

$ git init
Initialized empty Git repository in /Users/michael/learngit/.git/
7这个版本库的位置在我自己的电脑d盘course文件下，你可以任意设置
8当然你创建的txt测试文件，必须在course的文件下操作才能送到GitHub
9可以用ls -ls 查看.git文件有没有创建成功
10  git add xxx.txt   （使用 git add 命令，将创建或修改的文件添加到本地的 暂存区，这里保存的是你的临时更改）
11 git commit -m "引号里带你编辑这个文本的理由，比如上面.TXT文本为什么要编辑他"
11从网站复制的，供了解
（git commit 提交是你工作的一个里程碑 ―― 每当你完成一些工作，都可以创建一次提交，保存当前的版本。

这样一来，无论你何时修改了文件，都创建一个新版本的文件，你可以很方便地查看以往所有版本的文件和内容。

在提交之前，你必须先设置你的名字和 email，这是你在提交 commit 时的签名，每次提交记录里都会包含这些信息。

使用 git config 命令进行配置：

$ git config --global user.name "YourName"
$ git config --global user.email "YourEmail@xxx.com"
copy
完成配置后，我们可以创建提交了，请输入：

git commit -m "first commit"
copy
commit 的语法结构是 git commit -m "注释"，通过上个命令，你创建了一条注释为 “first commit” 的 Git 提交。

图片描述

?? 注意：每次提交，您都必须用 -m + '注释' 编辑注释信息 。它不仅能协助您辨别不同的版本，而且能让你理解，自己当时对文件做了什么修改。

比如当你每次在文件中添加了新的代码后，你可以写一句提交信息：“添加了 XXX 代码” ―― 当你一个月后回来看提交记录或者 Git 日志 时，你还能知道当时做了什么。）
12上面的了解也必须要看，因为在提交你的文件时，你必须配置好了你的名字和email，上面有配置方法，配置完了，你也可以查询看看成功没有
13终于到了激动人心的时候了，我们要和github仓库同步了
14 git remote add littleNmae（这个不知道你们的是啥，反正我的在无数次失败中，莫名奇妙的设置成了这个）+仓库的httl：\\地址
15git push littleName master
16 好了，刷新一下把，，GitHub就同步成功了